{"uid":"fa9a67cada1688a4","name":"test_customer_table_is_not_empty","fullName":"parabank_database.tests.test_database#test_customer_table_is_not_empty","historyId":"5f48ce92a38bcf58169fb4a81f6adb7b","time":{"start":1748353460681,"stop":1748353460681,"duration":0},"status":"broken","statusMessage":"java.sql.java.sql.SQLTransientConnectionException: java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused (Connection refused)","statusTrace":">   ???\nE   java.net.java.net.ConnectException: java.net.ConnectException: Connection refused (Connection refused)\n\norg.hsqldb.server.HsqlSocketFactory.java:0: java.net.ConnectException\n\nThe above exception was the direct cause of the following exception:\n\n>   ???\nE   org.hsqldb.org.hsqldb.HsqlException: org.hsqldb.HsqlException: java.net.ConnectException: Connection refused (Connection refused)\n\norg.jpype.Reflector0.java:0: org.hsqldb.HsqlException\n\nThe above exception was the direct cause of the following exception:\n\n>   ???\nE   Exception: Java Exception\n\norg.jpype.Reflector0.java:0: Exception\n\nThe above exception was the direct cause of the following exception:\n\n    @pytest.fixture(scope=\"session\")\n    def db_conn():\n>       conn = open_parabank_conn()\n\nparabank_database/tests/conftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nparabank_database/db_clients/parabank_db_client.py:19: in open_parabank_conn\n    return jaydebeapi.connect(\"org.hsqldb.jdbcDriver\", URL, [USER, PWD], str(JAR_PATH))\nvenv-automation/lib/python3.8/site-packages/jaydebeapi/__init__.py:412: in connect\n    jconn = _jdbc_connect(jclassname, url, driver_args, jars, libs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\njclassname = 'org.hsqldb.jdbcDriver', url = 'jdbc:hsqldb:hsql://localhost:9001/parabank', driver_args = ['sa', '']\njars = ['/home/user/Documents/QA_automation_portfolio/parabank_database/java-lib/hsqldb-jdk8.jar'], libs = []\n\n    def _jdbc_connect_jpype(jclassname, url, driver_args, jars, libs):\n        import jpype\n        if not jpype.isJVMStarted():\n            args = []\n            class_path = []\n            if jars:\n                class_path.extend(jars)\n            class_path.extend(_get_classpath())\n            if class_path:\n                args.append('-Djava.class.path=%s' %\n                            os.path.pathsep.join(class_path))\n            if libs:\n                # path to shared libraries\n                libs_path = os.path.pathsep.join(libs)\n                args.append('-Djava.library.path=%s' % libs_path)\n            # jvm_path = ('/usr/lib/jvm/java-6-openjdk'\n            #             '/jre/lib/i386/client/libjvm.so')\n            jvm_path = jpype.getDefaultJVMPath()\n            global old_jpype\n            if hasattr(jpype, '__version__'):\n                try:\n                    ver_match = re.match('\\d+\\.\\d+', jpype.__version__)\n                    if ver_match:\n                        jpype_ver = float(ver_match.group(0))\n                        if jpype_ver < 0.7:\n                            old_jpype = True\n                except ValueError:\n                    pass\n            if old_jpype:\n                jpype.startJVM(jvm_path, *args)\n            else:\n                jpype.startJVM(jvm_path, *args, ignoreUnrecognized=True,\n                               convertStrings=True)\n        if not jpype.isThreadAttachedToJVM():\n            jpype.attachThreadToJVM()\n            jpype.java.lang.Thread.currentThread().setContextClassLoader(jpype.java.lang.ClassLoader.getSystemClassLoader())\n        if _jdbc_name_to_const is None:\n            types = jpype.java.sql.Types\n            types_map = {}\n            if old_jpype:\n              for i in types.__javaclass__.getClassFields():\n                const = i.getStaticAttribute()\n                types_map[i.getName()] = const\n            else:\n              for i in types.class_.getFields():\n                if jpype.java.lang.reflect.Modifier.isStatic(i.getModifiers()):\n                  const = i.get(None)\n                  types_map[i.getName()] = const\n            _init_types(types_map)\n        global _java_array_byte\n        if _java_array_byte is None:\n            def _java_array_byte(data):\n                return jpype.JArray(jpype.JByte, 1)(data)\n        # register driver for DriverManager\n        jpype.JClass(jclassname)\n        if isinstance(driver_args, dict):\n            Properties = jpype.java.util.Properties\n            info = Properties()\n            for k, v in driver_args.items():\n                info.setProperty(k, v)\n            dargs = [ info ]\n        else:\n            dargs = driver_args\n>       return jpype.java.sql.DriverManager.getConnection(url, *dargs)\nE       java.sql.java.sql.SQLTransientConnectionException: java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused (Connection refused)\n\nvenv-automation/lib/python3.8/site-packages/jaydebeapi/__init__.py:230: java.sql.SQLTransientConnectionException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"db_conn","time":{"start":1748353460681,"stop":1748353461304,"duration":623},"status":"broken","statusMessage":"java.sql.java.sql.SQLTransientConnectionException: java.sql.SQLTransientConnectionException: java.net.ConnectException: Connection refused (Connection refused)\n","statusTrace":"  File \"/home/user/Documents/QA_automation_portfolio/venv-automation/lib/python3.8/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/user/Documents/QA_automation_portfolio/venv-automation/lib/python3.8/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"/home/user/Documents/QA_automation_portfolio/venv-automation/lib/python3.8/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/user/Documents/QA_automation_portfolio/venv-automation/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/user/Documents/QA_automation_portfolio/venv-automation/lib/python3.8/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/user/Documents/QA_automation_portfolio/parabank_database/tests/conftest.py\", line 14, in db_conn\n    conn = open_parabank_conn()\n  File \"/home/user/Documents/QA_automation_portfolio/parabank_database/db_clients/parabank_db_client.py\", line 19, in open_parabank_conn\n    return jaydebeapi.connect(\"org.hsqldb.jdbcDriver\", URL, [USER, PWD], str(JAR_PATH))\n  File \"/home/user/Documents/QA_automation_portfolio/venv-automation/lib/python3.8/site-packages/jaydebeapi/__init__.py\", line 412, in connect\n    jconn = _jdbc_connect(jclassname, url, driver_args, jars, libs)\n  File \"/home/user/Documents/QA_automation_portfolio/venv-automation/lib/python3.8/site-packages/jaydebeapi/__init__.py\", line 230, in _jdbc_connect_jpype\n    return jpype.java.sql.DriverManager.getConnection(url, *dargs)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"parabank_database.tests"},{"name":"suite","value":"test_database"},{"name":"host","value":"user-VivoBook-ASUSLaptop-X512JP-X512JP"},{"name":"thread","value":"510667-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"parabank_database.tests.test_database"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"fa9a67cada1688a4.json","parameterValues":[]}