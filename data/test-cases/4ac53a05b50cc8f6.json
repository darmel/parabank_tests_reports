{"uid":"4ac53a05b50cc8f6","name":"test_login_fail","fullName":"parabank_front.tests.test_login#test_login_fail","historyId":"64bbad5e0adf01a10e6715bcc11285a1","time":{"start":1748487335324,"stop":1748487345429,"duration":10105},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"username\"]\"}\n  (Session info: chrome=136.0.7103.113); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55921cf3471a <unknown>\n#1 0x55921c9d70a0 <unknown>\n#2 0x55921ca289b0 <unknown>\n#3 0x55921ca28ba1 <unknown>\n#4 0x55921ca76ea4 <unknown>\n#5 0x55921ca4e3cd <unknown>\n#6 0x55921ca742a0 <unknown>\n#7 0x55921ca4e173 <unknown>\n#8 0x55921ca1ad4b <unknown>\n#9 0x55921ca1b9b1 <unknown>\n#10 0x55921cef98cb <unknown>\n#11 0x55921cefd7ca <unknown>\n#12 0x55921cee1622 <unknown>\n#13 0x55921cefe354 <unknown>\n#14 0x55921cec645f <unknown>\n#15 0x55921cf224f8 <unknown>\n#16 0x55921cf226d6 <unknown>\n#17 0x55921cf33586 <unknown>\n#18 0x7f7112a1d609 start_thread","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"49bd3f3d4a7b6af4b84873874a92449c\")>\n\n    def test_login_fail(browser):\n        username = \"fakeuser\"\n        password = \"fakepass\"\n        # creo los dos objetos de las paginas que voy a usar\n        home_page = ParabankHomePage(browser)\n    \n        # Given la pagina de parabank esta activa\n        home_page.load()\n        logger.info(f'pagina cargada')\n    \n        # WHEN el user ingresa credenciales\n>       home_page.login(username, password)\n\nparabank_front/tests/test_login.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nparabank_front/pages/home.py:29: in login\n    username_input = self.browser.find_element(*self.USERNAME_INPUT)\nvenv-automation/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv-automation/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f591c87c3a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...wn>\\\\n#16 0x55921cf226d6 \\\\u003Cunknown>\\\\n#17 0x55921cf33586 \\\\u003Cunknown>\\\\n#18 0x7f7112a1d609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"username\"]\"}\nE         (Session info: chrome=136.0.7103.113); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55921cf3471a <unknown>\nE       #1 0x55921c9d70a0 <unknown>\nE       #2 0x55921ca289b0 <unknown>\nE       #3 0x55921ca28ba1 <unknown>\nE       #4 0x55921ca76ea4 <unknown>\nE       #5 0x55921ca4e3cd <unknown>\nE       #6 0x55921ca742a0 <unknown>\nE       #7 0x55921ca4e173 <unknown>\nE       #8 0x55921ca1ad4b <unknown>\nE       #9 0x55921ca1b9b1 <unknown>\nE       #10 0x55921cef98cb <unknown>\nE       #11 0x55921cefd7ca <unknown>\nE       #12 0x55921cee1622 <unknown>\nE       #13 0x55921cefe354 <unknown>\nE       #14 0x55921cec645f <unknown>\nE       #15 0x55921cf224f8 <unknown>\nE       #16 0x55921cf226d6 <unknown>\nE       #17 0x55921cf33586 <unknown>\nE       #18 0x7f7112a1d609 start_thread\n\nvenv-automation/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1748487334516,"stop":1748487335323,"duration":807},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"config","time":{"start":1748487334516,"stop":1748487334516,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"username\"]\"}\n  (Session info: chrome=136.0.7103.113); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x55921cf3471a <unknown>\n#1 0x55921c9d70a0 <unknown>\n#2 0x55921ca289b0 <unknown>\n#3 0x55921ca28ba1 <unknown>\n#4 0x55921ca76ea4 <unknown>\n#5 0x55921ca4e3cd <unknown>\n#6 0x55921ca742a0 <unknown>\n#7 0x55921ca4e173 <unknown>\n#8 0x55921ca1ad4b <unknown>\n#9 0x55921ca1b9b1 <unknown>\n#10 0x55921cef98cb <unknown>\n#11 0x55921cefd7ca <unknown>\n#12 0x55921cee1622 <unknown>\n#13 0x55921cefe354 <unknown>\n#14 0x55921cec645f <unknown>\n#15 0x55921cf224f8 <unknown>\n#16 0x55921cf226d6 <unknown>\n#17 0x55921cf33586 <unknown>\n#18 0x7f7112a1d609 start_thread","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"49bd3f3d4a7b6af4b84873874a92449c\")>\n\n    def test_login_fail(browser):\n        username = \"fakeuser\"\n        password = \"fakepass\"\n        # creo los dos objetos de las paginas que voy a usar\n        home_page = ParabankHomePage(browser)\n    \n        # Given la pagina de parabank esta activa\n        home_page.load()\n        logger.info(f'pagina cargada')\n    \n        # WHEN el user ingresa credenciales\n>       home_page.login(username, password)\n\nparabank_front/tests/test_login.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nparabank_front/pages/home.py:29: in login\n    username_input = self.browser.find_element(*self.USERNAME_INPUT)\nvenv-automation/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv-automation/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f591c87c3a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...wn>\\\\n#16 0x55921cf226d6 \\\\u003Cunknown>\\\\n#17 0x55921cf33586 \\\\u003Cunknown>\\\\n#18 0x7f7112a1d609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"username\"]\"}\nE         (Session info: chrome=136.0.7103.113); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x55921cf3471a <unknown>\nE       #1 0x55921c9d70a0 <unknown>\nE       #2 0x55921ca289b0 <unknown>\nE       #3 0x55921ca28ba1 <unknown>\nE       #4 0x55921ca76ea4 <unknown>\nE       #5 0x55921ca4e3cd <unknown>\nE       #6 0x55921ca742a0 <unknown>\nE       #7 0x55921ca4e173 <unknown>\nE       #8 0x55921ca1ad4b <unknown>\nE       #9 0x55921ca1b9b1 <unknown>\nE       #10 0x55921cef98cb <unknown>\nE       #11 0x55921cefd7ca <unknown>\nE       #12 0x55921cee1622 <unknown>\nE       #13 0x55921cefe354 <unknown>\nE       #14 0x55921cec645f <unknown>\nE       #15 0x55921cf224f8 <unknown>\nE       #16 0x55921cf226d6 <unknown>\nE       #17 0x55921cf33586 <unknown>\nE       #18 0x7f7112a1d609 start_thread\n\nvenv-automation/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException","steps":[],"attachments":[{"uid":"ad78c21166fece4a","name":"log","source":"ad78c21166fece4a.txt","type":"text/plain","size":450},{"uid":"85c44730e40238b","name":"stderr","source":"85c44730e40238b.txt","type":"text/plain","size":300}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"browser::0","time":{"start":1748487345462,"stop":1748487345519,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"parabank_front.tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"user-VivoBook-ASUSLaptop-X512JP-X512JP"},{"name":"thread","value":"358623-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"parabank_front.tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"4ac53a05b50cc8f6.json","parameterValues":[]}